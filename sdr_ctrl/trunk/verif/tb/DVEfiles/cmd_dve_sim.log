set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synopsys::xml set_array_limit <data limit="50" />
synopsys::xml set_depth_limit <data limit="100" />
synopsys::xml set_string_limit <data limit="1000" />
synopsys::xml set_only_active_frame <data value="1" />
synopsys::xml set_variable_frame_id <data value="1" />
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /mnt/vol_NFS_Zener/WD_ESPEC/fparis/MP6134_SDRAM_Controller/sdr_ctrl/trunk/verif/tb/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD0
set ::dve_fid VPD0
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket /tmp/smlnpfeogV8
synUtils::sendTool -active {_icl_start_rpc -version "M-2017.03_Full64" -sync_file /tmp/vcs_dve_rpc.fparis.21980}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.fparis.21980}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
synopsys::dump -add {top.sdrc_intf} -aggregates  -fid VPD0
synopsys::dump -add {top.whitebox_intf} -aggregates  -fid VPD0
dump -add { top.assertion.sdram_initialization top.assertion.whitebox_if }  -depth 0 -scope "."
ucliGUI::vpdAddHierarchy -scope top.assertion -depth 1 -file /mnt/vol_NFS_Zener/WD_ESPEC/fparis/MP6134_SDRAM_Controller/sdr_ctrl/trunk/verif/tb/inter.vpd; synopsys::dump -flush VPD0
synopsys::dump -add {top.assertion.whitebox_if} -aggregates  -fid VPD0
synopsys::dump -add {top.assertion.whitebox_if } -aggregates  -fid VPD0
synopsys::run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
synopsys::xml get_stop_data
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
